// Copyright 2023 Intrinsic Innovation LLC
// Intrinsic Proprietary and Confidential
// Provided subject to written agreement between the parties.

syntax = "proto3";

package intrinsic_proto.skills;

import "google/protobuf/any.proto";
import "intrinsic/skills/proto/footprint.proto";

message EquipmentSelector {
  // An EquipmentHandle must include all of the types specified here to be
  // considered a match for this selector.
  repeated string equipment_type_names = 1;

  // Specifies the manner in which the equipment will be used.
  //
  // By default, the sharing type defaults to exclusive access, meaning that
  // only one skill may use the equipment at the time. Some skills may use
  // equipment in a way that enables multiple simultaneous access.
  intrinsic_proto.skills.EquipmentResource.SharingType sharing_type = 2;
}

message EquipmentHandle {
  message EquipmentData {
    // Data that can be used to access or interact with the equipment
    // represented by this equipment data.
    google.protobuf.Any contents = 1;
  }

  // The name of the equipment represented by this handle.
  string name = 1;

  // The equipment types this handle represents and their configuration data.
  map<string, EquipmentData> equipment_data = 2;

  // Information on how to connect to this piece of equipment.
  EquipmentConnectionInfo connection_info = 3;
}

// Contains info on how to connect to a piece of equipment.
message EquipmentConnectionInfo {
  oneof target {
    EquipmentGrpcConnectionInfo grpc = 1;
  }
}

message EquipmentGrpcConnectionInfo {
  // Address of the GRPC service.
  string address = 1;

  // Routing information attached to the http header.
  string server_instance = 2;

  // The header to be used with the instance name in the metadata of requests.
  string header = 3;
}
