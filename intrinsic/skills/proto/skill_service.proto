// Copyright 2023 Intrinsic Innovation LLC

syntax = "proto3";

package intrinsic_proto.skills;

import "google/longrunning/operations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "intrinsic/logging/proto/context.proto";
import "intrinsic/skills/proto/error.proto";
import "intrinsic/skills/proto/footprint.proto";
import "intrinsic/skills/proto/prediction.proto";
import "intrinsic/skills/proto/skills.proto";

message PredictRequest {
  google.protobuf.Any parameters = 2;

  // ID of the world in the world service which holds the initial world state
  // for the prediction.
  string world_id = 3;

  intrinsic_proto.skills.SkillInstance instance = 4;

  // Logging context of the operation (e.g. IDs of related plan instance,
  // deployment configs etc.).
  intrinsic_proto.data_logger.Context context = 5;

  // Optional skill-internal data from a previous call to Predict.
  bytes internal_data = 6;

  reserved 1;
  reserved "internal_request";
}

message PredictResult {
  // The possible set of outcomes given the skill and its parameters. This list
  // of outcomes should represent a probability distribution (i.e. the
  // `probability` fields of each Prediction should sum to 1.0). Each predicted
  // outcome contains a sequence of world updates with associated types. These
  // updates should be confined to the resources available in the footprint that
  // would be generated from a call to GetFootprint() with the same arguments.
  repeated Prediction outcomes = 2;

  // Skill-internal data to pass to Projector.GetFootprint and
  // Executor.StartExecute.
  bytes internal_data = 3;

  reserved 1;
  reserved "initial_world_snapshot_id";
}

message GetFootprintRequest {
  google.protobuf.Any parameters = 1;

  // ID of the world in the world service which holds the initial world state
  // for getting the skill footprint.
  string world_id = 2;

  intrinsic_proto.skills.SkillInstance instance = 3;

  // Logging context of the operation (e.g. IDs of related plan instance,
  // deployment configs etc.).
  intrinsic_proto.data_logger.Context context = 4;

  // Skill-internal data from a previous call to Predict.
  bytes internal_data = 5;
}

message GetFootprintResult {
  intrinsic_proto.skills.Footprint footprint = 1;
}

service Projector {
  // Returns a distribution of possible states that the world could be in after
  // executing the skill with the provided parameters.
  rpc Predict(PredictRequest) returns (PredictResult) {}

  // Returns the anticipated resources needed, given the nominal initial world.
  rpc GetFootprint(GetFootprintRequest) returns (GetFootprintResult) {}
}

message ExecuteRequest {
  google.protobuf.Any parameters = 8;

  intrinsic_proto.skills.Footprint footprint = 2;

  // Skill-internal data from a previous call to Projector.Predict.
  bytes internal_data = 3;

  // ID of the world in the world service which holds the initial world state
  // for the skill execution.
  string world_id = 7;

  intrinsic_proto.skills.SkillInstance instance = 5;

  // Logging context of the operation (e.g. IDs of related plan instance,
  // deployment configs etc.).
  intrinsic_proto.data_logger.Context context = 6;

  // Additional data associated with the skill. This field is currently required
  // for all learning (template) skills but may be left empty for non-learning
  // skills.
  intrinsic_proto.skills.SkillMetadata skill_metadata = 10;
}

message ExecuteResult {
  // Contains optional returned data for the Skill. If a Skill returns data in
  // this field, there will also be descriptor information for the type of data
  // in the Skill information retrieved from the registry.
  google.protobuf.Any result = 4;
}

message PreviewRequest {
  google.protobuf.Any parameters = 1;

  intrinsic_proto.skills.Footprint footprint = 2;

  // Skill-internal data from a previous call to Projector.Predict.
  bytes internal_data = 3;

  // ID of the world in the world service which holds the initial world state
  // for the skill preview.
  string world_id = 4;

  intrinsic_proto.skills.SkillInstance instance = 5;

  // Logging context of the operation (e.g. IDs of related plan instance,
  // deployment configs etc.).
  intrinsic_proto.data_logger.Context context = 6;
}

message PreviewResult {
  // The expected return values from the skill. Has the same caveats as the
  // result in intrinsic_proto.skills.ExecuteResult.
  google.protobuf.Any result = 1;

  // The expected world states during execution of the skill. Updates are
  // ordered such that each subsequent update should be applied at the specified
  // time and for the specified duration. The first update should be applied to
  // the initial world used for generating the preview.
  repeated TimedWorldUpdate expected_states = 2;
}

service Executor {
  /* Starts executing the skill as a long-running operation.

  The RPC fails with:
  - NOT_FOUND if the skill cannot be found.
  - INTERNAL if default parameters cannot be applied.
  - ALREADY_EXISTS if an operation with the derived name already exists. */
  rpc StartExecute(ExecuteRequest) returns (google.longrunning.Operation) {}

  /* Starts previewing execution of the skill as a long-running operation.

  The RPC fails with:
  - NOT_FOUND if the skill cannot be found.
  - INTERNAL if default parameters cannot be applied.
  - ALREADY_EXISTS if an operation with the derived name already exists. */
  rpc StartPreview(PreviewRequest) returns (google.longrunning.Operation) {}

  /* Gets the current state of a skill operation.

  The RPC fails with:
  - NOT_FOUND if the operation cannot be found. */
  rpc GetOperation(google.longrunning.GetOperationRequest)
      returns (google.longrunning.Operation) {}

  /* Requests cancellation of a skill operation.

  NOTE: The skill may finish successfully before it can be cancelled. The actual
  outcome can be inferred from the state returned by a subsequent call to
  WaitOperation.

  The RPC fails with:
  - NOT_FOUND if the operation cannot be found.
  - FAILED_PRECONDITION if the operation was already cancelled.
  - UNIMPLEMENTED if the skill does not support cancellation.
  - INTERNAL if a skill cancellation callback fails. */
  rpc CancelOperation(google.longrunning.CancelOperationRequest)
      returns (google.protobuf.Empty) {}

  /* Waits for a skill operation to finish.

  Unless the wait timed out, the returned state reflects the final outcome of
  skill execution. NOTE that an unfinished operation will be returned if the
  wait times out.

  If the operation succeeded, the operation's `response` will be the resulting
  ExecuteResult or PreviewResult. Otherwise, the operation's `error` will
  contain information about the failure.

  The RPC fails with:
  - NOT_FOUND if the operation cannot be found. */
  rpc WaitOperation(google.longrunning.WaitOperationRequest)
      returns (google.longrunning.Operation) {}

  /* Clears the internal store of skill operations.

  Should only be called once all operations are finished.

  The RPC fails with:
  - FAILED_PRECONDITION if any operations are not finished. */
  rpc ClearOperations(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

// Contains the skill information provided by a single skill service.
message SkillInformationResult {
  Skill skill = 2;
}

service SkillInformation {
  // Returns skill information.
  rpc GetSkillInfo(google.protobuf.Empty) returns (SkillInformationResult) {}
}

// Logged by the skills client library after a skill prediction.
message PredictionSummary {
  intrinsic_proto.skills.SkillInstance instance = 1;

  intrinsic_proto.skills.PredictResult result = 2;

  google.protobuf.Duration duration = 3;

  // Error information if the request failed for any reason.
  int32 error_code = 4;
  string error_message = 5;
  SkillErrorInfo error_info = 6;
}

// Logged by the skills client library after a skill get footprint.
message FootprintSummary {
  intrinsic_proto.skills.SkillInstance instance = 1;

  intrinsic_proto.skills.GetFootprintResult get_footprint_result = 7;

  google.protobuf.Duration duration = 3;

  // Error information if the request failed for any reason.
  int32 error_code = 4;
  string error_message = 5;
  SkillErrorInfo error_info = 6;

  reserved 2;
  reserved "result";
}

// Logged by the skills client library after a skill execution.
message ExecutionSummary {
  intrinsic_proto.skills.SkillInstance instance = 1;

  intrinsic_proto.skills.ExecuteResult result = 2;

  google.protobuf.Duration duration = 3;

  // The OpenCensus Trace ID associated with this skill execution.
  // A 32 character hex string.
  string trace_id = 4;

  // Error information if the request failed for any reason.
  int32 error_code = 5;
  string error_message = 6;
  SkillErrorInfo error_info = 7;
}

// Logged by the skills client library after a skill preview.
message PreviewSummary {
  intrinsic_proto.skills.SkillInstance instance = 1;

  intrinsic_proto.skills.PreviewResult result = 2;

  google.protobuf.Duration duration = 3;

  // The OpenCensus Trace ID associated with this skill preview.
  // A 32 character hex string.
  string trace_id = 4;

  // Error information if the request failed for any reason.
  int32 error_code = 5;
  string error_message = 6;
  SkillErrorInfo error_info = 7;
}

message ProjectRequest {
  option deprecated = true;

  google.protobuf.Any parameters = 6;

  // Id of the world in the world service which holds the initial world state
  // for the skill projection.
  string world_id = 4;

  intrinsic_proto.skills.SkillInstance instance = 3;

  // OPTIONAL. Context of the projection of the skill instance (e.g. IDs of
  // related plan instance, deployment configs etc.).
  intrinsic_proto.data_logger.Context context = 5;

  // OPTIONAL. Skill-internal data about the outcome of planning the skill. This
  // data is optional and if provided can be used to make planning faster. It is
  // intended to be used if the skill was previously planned and needs
  // replanning.
  bytes internal_data = 7;
}

message ProjectResult {
  option deprecated = true;

  intrinsic_proto.skills.Footprint footprint = 2;

  // Skill-internal data about the outcome of planning the skill. Attempting to
  // execute a skill without passing this data may result in behavior that does
  // not match this ProjectResult.
  bytes internal_data = 5;
}

// Logged by the skills client library after a skill projection.
message ProjectionSummary {
  option deprecated = true;

  intrinsic_proto.skills.SkillInstance instance = 1;

  intrinsic_proto.skills.ProjectResult result = 2;

  google.protobuf.Duration duration = 3;

  // Error information if the request failed for any reason.
  int32 error_code = 4;
  string error_message = 5;
  SkillErrorInfo error_info = 6;
}
